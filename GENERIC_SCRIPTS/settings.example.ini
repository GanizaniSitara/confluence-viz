# Generic Settings for OpenWebUI Document Uploaders
# 
# This configuration file controls both the markdown uploader and the Tika document uploader.
# Customize these settings for your specific OpenWebUI installation.

[qdrant_uploader]
# Directory containing documents to upload
input_dir = ./documents

# Ollama configuration for embeddings
ollama_host = http://localhost:11434
embed_model = nomic-embed-text:v1.5

# Qdrant vector database configuration
# If running in Docker/WSL, use the appropriate IP address
qdrant_host = localhost
qdrant_port = 6333

# OpenWebUI knowledge collection settings
# Get these IDs from your OpenWebUI instance:
# - knowledge_id: Create a knowledge collection in OpenWebUI and copy its ID
# - user_id: Your user ID from OpenWebUI (check browser developer tools)
knowledge_id = 00000000-0000-0000-0000-000000000000
user_id = 00000000-0000-0000-0000-000000000000

# Text processing settings
chunk_size = 500
overlap = 50
batch_points = 30

# File patterns for markdown uploader
file_pattern = *.md

# Checkpoint file to track progress (allows resuming)
checkpoint_file = qdrant_markdown_checkpoint.json

# PostgreSQL configuration for OpenWebUI
# Note: If running from WSL accessing Windows PostgreSQL, use appropriate IP
db_host = localhost
db_port = 5432
db_name = openwebui
db_user = postgres
db_password = password

[tika_uploader]
# Apache Tika server URL for document text extraction
# Start with: docker run -p 9998:9998 apache/tika:latest
tika_url = http://localhost:9998

# Directory containing non-markdown documents
input_dir = ./documents

# Files already processed tracking
processed_file = .tika_processed.json
checkpoint_file = qdrant_tika_checkpoint.json

# All other settings inherited from [qdrant_uploader] section

[confluence_pickle_uploader]
# Directory containing Confluence pickle files created by sample_and_pickle_spaces.py
pickle_dir = ../temp

# Space keys to process (comma-separated list)
# Leave empty to process all spaces with --all-spaces flag
space_keys = 

# Convert Confluence HTML to Markdown for better readability
html_to_markdown = true

# Base URL of your Confluence instance (for generating page links)
base_url = https://confluence.example.com

# Checkpoint file to track progress (allows resuming)
checkpoint_file = qdrant_confluence_pickle_checkpoint.json

# All other settings inherited from [qdrant_uploader] section